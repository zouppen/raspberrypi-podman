#!/bin/sh -eu
#
# Converts 64-bit RPi image to a Podman container. By Joel Lehtonen 2023.

cleanup () {
    set +e
    trap - EXIT INT
    test "${loopdev+x}" && losetup -d "$loopdev"
    umount -ql "$workdir/boot_orig" "$workdir/boot_copy" "$workdir/root/boot" "$workdir/root" "$workdir"
    rmdir "$workdir"
}

run_rpi () {
    # Sync assets from /boot since it can't be mounted when qemu runs it
    mount -o ro "${loopdev}p1" "$workdir/boot_orig"
    rsync -a "$workdir/boot_orig/" "$workdir/boot_copy/"
    umount "$workdir/boot_orig/"
    
    # Qemu serial is ttyAMA0, not serial0, so making run-time adjustment
    cmdline="`cat "$workdir/boot_copy/cmdline.txt" | sed 's/serial0/ttyAMA0/'`"

    qemu-system-aarch64 \
	-runas "$SUDO_USER" \
	-nographic \
	-nodefaults \
	-serial "mon:stdio" \
	-machine raspi3b \
	-cpu cortex-a72 \
	-dtb "$workdir/boot_copy/bcm2710-rpi-3-b-plus.dtb" \
	-m 1G -smp 4 \
	-kernel "$workdir/boot_copy/kernel8.img" \
	-no-reboot \
	-drive "if=sd,format=raw,media=disk,index=0,file=$loopdev" \
	-append "$cmdline ${1-}"

    # Update partitions in case they've changed
    partprobe "$loopdev"
}

mount_root () {
    mount "${loopdev}p2" "$workdir/root"
    mount "${loopdev}p1" "$workdir/root/boot"
}

systemd_override () {
    mkdir -p "$workdir/root/etc/systemd/system/$1.d"
    cat >"$workdir/root/etc/systemd/system/$1.d/override.conf"
}

podman_hide () {
    systemd_override "$1" <<EOF
[Unit]
ConditionVirtualization=!podman
EOF
}

if ! test "${SUDO_USER+x}"; then
    echo "Must be run with sudo" >&2
    exit 1
fi

if test $# -ne 2; then
    cat >&2 <<EOF
Usage $0 IMAGEFILE_XZ NAME

    IMAGEFILE_XZ must point to XZ compressed 64 bit Raspberry Pi OS image
    NAME is the image name to be imported to Podman

EOF
    exit 1
fi

echo "Creating podman container \"$2\""

# Let's go
unset loopdev workdir
trap cleanup EXIT INT

# Create work directory as tmpfs for an easy clean-up
workdir="`mktemp -d`"
mount -t tmpfs -o size=4G raspiboot "$workdir"
mkdir -p "$workdir/boot_orig" "$workdir/boot_copy" "$workdir/root/boot"

# Extract image. SD card driver in QEMU requires binary sizes (2G / 4G / ...)
xzcat --verbose "$1" >"$workdir/sd.img"
truncate -s 4G "$workdir/sd.img" # Bad if image is already larger than 4GB

# Setting up loop device.
loopdev="`losetup -f`"
losetup -P "$loopdev" "$workdir/sd.img"

# Run system once to resize fs, set UUID, etc.
run_rpi "systemd.unit=poweroff.target"

# Mount final result
mount_root

# Place arm64 emulator binary in place
cp -a /usr/bin/qemu-aarch64-static "$workdir/root/usr/bin/"

# Place virtualization overrides
podman_hide run-rpc_pipefs.mount
podman_hide rpi-eeprom-update.service
podman_hide dphys-swapfile.service

# Auto login when containerized
systemd_override console-getty.service <<EOF
[Service]
EnvironmentFile=/etc/console-getty
ExecStart=
ExecStart=-/sbin/agetty --autologin \${AUTOLOGIN} --noclear --keep-baud console 115200,38400,9600 $TERM
EOF

# Manipulate userconfig a bit to make it work in podman console.
# Run clean-up script after finishing.
systemd_override userconfig.service <<EOF
[Unit]
Before=console-getty.service
[Service]
Environment=PATH=/opt/initial:/usr/sbin:/usr/bin
TTYPath=/dev/console
StandardInput=tty
ExecStopPost=-/opt/initial/podman-clean
EOF

# Hack: chvt disable during userconfig
mkdir -p "$workdir/root/opt/initial"
ln -s ../../bin/true "$workdir/root/opt/initial/chvt"

cat >"$workdir/root/opt/initial/podman-clean" <<EOF
#!/bin/sh -eu
clear
echo "AUTOLOGIN=\$(id -nu 1000)" >/etc/console-getty
rm -rf /opt/initial
systemctl revert userconfig
EOF
chmod a+x "$workdir/root/opt/initial/podman-clean"

# Comment out the whole fstab
sed -i -r 's/^[^#]/# \0/' "$workdir/root/etc/fstab" 

# File system resize is purged
rm -f "$workdir/root/etc/init.d/resize2fs_once"

# Create share directory
mkdir -p "$workdir/root/mnt/share" 

# Export this image to podman
echo "Building podman image..."
tar --numeric-owner -C "$workdir/root" -c . |
    sudo -u "$SUDO_USER" podman import --change 'ENTRYPOINT ["/sbin/init"]' --change 'VOLUME ["/mnt/share"]' - "$2"
echo "Ready"
